---
import Layout from '../layouts/Layout.astro';

// // When the user scrolls, run this code
// document.addEventListener("scroll", () => { 
// 	// Get all the elements which need to be animated in
// 	let animateInElements = document.querySelectorAll("[data-animate-in]");

// 	// Loop through all the elements
// 	animateInElements.forEach((element) => {
// 		// Check if it's been animated in already
// 		if (element.classList.contains("animate-in")) {
// 			return;
// 		}
		
// 		// Get the element's position relative to the viewport
// 		let boundingRect = element.getBoundingClientRect();

// 		// Get how far from the top of the screen it is
// 		let elementTop = boundingRect.top;

// 		// Check if the element is in the viewport
// 		if (elementTop < window.innerHeight) {
// 			element.classList.add("animate-in");

// 			// Depending on the data-animate-from attribute, add the appropriate class
// 			let animateFrom: string = element.getAttribute("data-animate-from") || "";
// 			element.classList.add(animateFrom);
// 		}
// 	});
// })
---

<Layout title="Welcome to AII.">
	<main>
		<script>
		// When the user scrolls, run this code
document.addEventListener("scroll", () => { 
	// Get all the elements which need to be animated in
	let animateInElements = document.querySelectorAll("[data-animate-in]");

	// Loop through all the elements
	animateInElements.forEach((element) => {
		// Check if it's been animated in already
		if (element.classList.contains("animate-in")) {
			return;
		}
		
		// Get the element's position relative to the viewport
		let boundingRect = element.getBoundingClientRect();

		// Get how far from the top of the screen it is
		let elementTop = boundingRect.top;

		// Check if the element is in the viewport
		if (elementTop < window.innerHeight) {
			element.classList.add("animate-in");

			// Depending on the data-animate-from attribute, add the appropriate class
			let animateFrom: string = element.getAttribute("data-animate-from") || "";
			element.classList.add(animateFrom);
		}
	});
})

	</script>
		<div class="center">
			<h1 class="title" data-animate-in data-animate-from="top">Anti-Idiot Idiots</h1>
			<div id="cards">
				<div class="card"></div>
				<div class="card"></div>
				<div class="card"></div>
			</div>
	</div>

	</main>
</Layout>

<style>
	@import url('https://fonts.googleapis.com/css2?family=Encode+Sans+Semi+Expanded:wght@700&display=swap'); /* Import font */

	.center {
		display: flex;
		flex-direction: column;
		
		/* Center the content */
		justify-content: center;
		align-items: center;
		
		height: 70vh;
		background: linear-gradient(to bottom, #00000088, #00000000); 

	}
	.title {
		font-size: 8rem;
		font-family: 'Encode Sans Semi Expanded', sans-serif; 

		margin: 0;
		margin-top: 10vh;

		color: white;

		/* Makes the text a gradient  */
		background-clip: text;
		/* background-clip: text makes the text the area that the backgroud property affects */
		-webkit-background-clip: text; 
		-webkit-text-fill-color: transparent;
		background-image: linear-gradient(90deg, #991111, #26199b);


		position: relative;
		z-index: 100;
		-webkit-text-stroke: 3px rgba(255, 255, 255, 0.322);
		text-rendering: optimizeLegibility;
	}
	#cards{
		display: flex;
		flex-wrap: wrap;
		gap: 8px;
		max-width: 916px;
		width: calc(100% - 20px);

		justify-content: center;
	}
	.card{
		background-color: rgba(177, 177, 177, 0.1);
		border: 5px solid rgba(255, 255, 255, 0.1);
		border-radius: 10px;
		height: 260px;
		position: relative;
		width: 300px;

		/* Make transform smooth */
		transition: transform 0.5s ease;
		/* Make margin smooth */
		transition: margin 0.5s ease;

	}

	/* When card is hovered, make it bigger */
	.card:hover{
		transform: scale(1.1);

		/* increase flexbox gap */
		margin: 8px;
	}
</style>